# Generated by Django 2.2.5 on 2019-10-09 09:59

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bot', '0003_auto_20191009_1459'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
                ('active', models.BooleanField(default=False, verbose_name='Активно')),
                ('description', models.TextField(verbose_name='Описание')),
                ('producer', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Название')),
                ('yearOfIssue', models.DateField(verbose_name='Дата выпуска в показ')),
                ('country', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='PaySystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
                ('paySystemToken', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Token')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
                ('active', models.BooleanField(default=False, verbose_name='Активно')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('time', models.TimeField(verbose_name='Время начала сеанса')),
                ('duration', models.TimeField(verbose_name='Длительность')),
                ('startDate', models.DateField(verbose_name='Дата окончания показа сеанса')),
                ('movie', models.ManyToManyField(to='system.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegramId', models.PositiveIntegerField(verbose_name='Telegram ID')),
                ('fullName', models.CharField(default='', max_length=255, verbose_name='Полное имя')),
                ('username', models.CharField(default='', max_length=255, null=True, verbose_name='Username')),
                ('phone', models.PositiveIntegerField(blank=True, null=True, verbose_name='Номер телефона')),
                ('language', models.CharField(default='RU', max_length=5, verbose_name='Язык')),
                ('registrationDate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyDate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата приобретения билета')),
                ('applyDate', models.DateTimeField(blank=True, null=True, verbose_name='Дата использования билета')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Цена')),
                ('cinema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.Cinema')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.Session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.TelegramUser')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
                ('fullName', models.CharField(default='', max_length=255, verbose_name='Полное имя')),
                ('registrationDate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('appliedTickets', models.ManyToManyField(to='system.Ticket')),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
                ('active', models.BooleanField(default=False, verbose_name='Активно')),
                ('paySystem', models.ManyToManyField(to='system.PaySystem')),
                ('telegramBotToken', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.Token')),
            ],
        ),
        migrations.CreateModel(
            name='SessionDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255, verbose_name='Название')),
                ('date', models.DateField(verbose_name='День')),
                ('sessions', models.ManyToManyField(to='system.Session')),
            ],
        ),
    ]
